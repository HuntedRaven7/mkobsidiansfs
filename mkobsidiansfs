#!/bin/bash
if [[ $EUID -ne 0 ]]; then
  echo "This script must be run as root."
  exit 1
fi
BUILD_DIR="obsidian_rootfs"
PACKAGES="base linux linux-firmware networkmanager sudo vim nano efibootmgr python squashfs-tools arch-install-scripts base-devel"
OUTPUT_SFS="system.sfs"
CUSTOM_SCRIPTS_DIR=""
if [[ "$1" != "" ]]; then
  CUSTOM_SCRIPTS_DIR="$(realpath "$1")"
  echo ">>> Custom scripts directory specified: $CUSTOM_SCRIPTS_DIR"
fi
for tool in pacstrap arch-chroot mksquashfs; do
  if ! command -v $tool &>/dev/null; then
    echo "Error: Required command '$tool' not found. Please install it."
    exit 1
  fi
done
echo ">>> Cleaning up any previous build directories..."
rm -rf "$BUILD_DIR"
rm -f "$OUTPUT_SFS"
mkdir -p "$BUILD_DIR"
echo ">>> Bootstrapping the base system with pacstrap..."
echo ">>> This may take some time, depending on your internet connection."
if ! pacstrap -c -K "$BUILD_DIR" $PACKAGES; then
  echo "Error: pacstrap failed to install the base system."
  exit 1
fi
echo ">>> Enabling NetworkManager to start on boot..."
arch-chroot "$BUILD_DIR" systemctl enable NetworkManager
if [[ -n "$CUSTOM_SCRIPTS_DIR" ]]; then
  echo ">>> Copying custom scripts to chroot..."
  SCRIPT_TEMP_DIR="/root/custom_scripts"
  mkdir -p "$BUILD_DIR/$SCRIPT_TEMP_DIR"
  cp -r "$CUSTOM_SCRIPTS_DIR" "$BUILD_DIR/$SCRIPT_TEMP_DIR/"
  echo ">>> Making custom scripts executable and running main.sh..."
  arch-chroot "$BUILD_DIR" bash -c "chmod +x $SCRIPT_TEMP_DIR/* && $SCRIPT_TEMP_DIR/main.sh"
  echo ">>> Cleaning up custom scripts from chroot..."
  rm -rf "$BUILD_DIR/$SCRIPT_TEMP_DIR"
fi
echo ">>> Creating the SquashFS image ($OUTPUT_SFS)..."
if ! mksquashfs "$BUILD_DIR" "$OUTPUT_SFS" -noappend -comp xz -processors $(nproc); then
  echo "Error: mksquashfs failed to create the image."
  exit 1
fi
echo ">>> Cleaning up the build directory..."
rm -rf "$BUILD_DIR"
echo "---"
echo ">>> Success! ObsidianOS system image created at: $(pwd)/$OUTPUT_SFS"
echo ">>> Packages included: $PACKAGES"
